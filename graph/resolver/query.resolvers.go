package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.62

import (
	"ThaiLy/graph/generated"
	"ThaiLy/graph/model"
	"context"
	"fmt"
)

// GetAccount is the resolver for the getAccount field.
func (r *queryResolver) GetAccount(ctx context.Context) (*model.Account, error) {
	result, err := r.accountController.GetAccountController(ctx)
	if err != nil {
		return nil, err
	}
	account := result.(model.Account)
	return &account, nil
}

// GetCategory is the resolver for the getCategory field.
func (r *queryResolver) GetCategory(ctx context.Context, categoryID *string) ([]*model.Category, error) {
	panic(fmt.Errorf("not implemented: GetCategory - getCategory"))
}

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
